df[i,1] <- df[i,2]
}
}
df[,1] <- as.factor(df[,1])
df[,2] <- as.factor(df[,2])
return(df)
}
df_confirmed <- fill_missing_province(df_confirmed)
head(df_confirmed)
# Rename rows...
extract_location <- function(df, cname, pname){
country <- subset(df, df$Country.Region==cname)
head(country)
dfct <- data.frame(t(subset(country, country$Province.State==pname)))
dfct <- tail(dfct, length(dfct)-5)
names(dfct) <- c("count")
dfct$count <- as.numeric(as.character(dfct$count))
dfct$location = rep(paste(cname,"-",pname), nrow(dfct))
dfct$sequence = seq(1,nrow(dfct))
names(dfct)<- c('count','location','sequence')
dfct <- dfct[c('sequence','location','count')]
dfct$count <- as.integer(dfct$count)
row.names(dfct) <- seq(1,nrow(dfct))
return(dfct)
}
head(extract_location(df_confirmed, "US", "Minnesota"))
rm(list=ls())
library(ggplot2)
library(data.table)
library(RCurl)
df_confirmed <- read.csv('time_series_covid_19_confirmed.csv')
#covid_file <- getURL('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv', ssl.verifyhost=FALSE, ssl.verifypeer=FALSE)
#df_confirmed <- read.csv(textConnection(covid_file), header=T)
#head(df_confirmed)
#df_deaths <- read.csv('time_series_covid_19_deaths.csv')
#df_recovered <- read.csv('time_series_covid_19_recovered.csv')
fill_missing_province <- function(df) {
df[,1] <- as.character(df[,1])
df[,2] <- as.character(df[,2])
head(df_confirmed)
for(i in seq(1,nrow(df))){
if(as.character(df[i,1])==""){
df[i,1] <- df[i,2]
}
}
df[,1] <- as.factor(df[,1])
df[,2] <- as.factor(df[,2])
return(df)
}
df_confirmed <- fill_missing_province(df_confirmed)
head(df_confirmed)
# Rename rows...
extract_location <- function(df, cname, pname){
country <- subset(df, df$Country.Region==cname)
head(country)
dfct <- data.frame(t(subset(country, country$Province.State==pname)))
dfct <- tail(dfct, length(dfct)-5)
names(dfct) <- c("count")
dfct$count <- as.numeric(as.character(dfct$count))
dfct$location = rep(paste(cname,"-",pname), nrow(dfct))
dfct$sequence = seq(1,nrow(dfct))
names(dfct)<- c('count','location','sequence')
dfct <- dfct[c('sequence','location','count')]
dfct$count <- as.integer(dfct$count)
row.names(dfct) <- seq(1,nrow(dfct))
return(dfct)
}
head(extract_location(df_confirmed, "US", "Minnesota"))
shift_up <- function(df, column){
idx = which(names(df)==column)
while(df[1,idx]==0){
first_row <- df[1,]
for(i in seq(1, nrow(df)-1)){
df[i,] <- df[i+1,]
}
df[nrow(df),] <- first_row
}
return(df)
}
test_df <- data.frame(as.integer(), as.character())
test_df <- rbind(test_df,data.frame(count=0,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=0,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=1,stuff='one'))
test_df <- rbind(test_df,data.frame(count=2,stuff='two'))
test_df <- rbind(test_df,data.frame(count=3,stuff='three'))
names(test_df) <- c('count','stuff')
test_df
shift_up(test_df, 'count')
remove_zeros <- function(df) {
new_df = subset(df, df$count>0)
return(new_df)
}
test_df <- data.frame(as.integer(), as.character())
test_df <- rbind(test_df,data.frame(count=0,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=0,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=1,stuff='one'))
test_df <- rbind(test_df,data.frame(count=2,stuff='two'))
test_df <- rbind(test_df,data.frame(count=3,stuff='three'))
names(test_df) <- c('count','stuff')
test_df
shift_df <- shift_up(test_df, 'count')
shift_df
clean_df <- remove_zeros(shift_df)
clean_df
test_df <- data.frame(as.integer(), as.character())
test_df <- rbind(test_df,data.frame(count=5,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=45,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=112,stuff='one'))
test_df <- rbind(test_df,data.frame(count=209,stuff='two'))
test_df <- rbind(test_df,data.frame(count=783,stuff='three'))
names(test_df) <- c('count','stuff')
compute_delta <- function(df, colname){
delta = data.frame(as.integer())
delta <- rbind(delta,delta=0)
c = which(names(df)==colname)
for (r in seq(2,nrow(df))){
delta <- rbind(delta, delta=(df[r,c] - df[r-1,c]))
}
names(delta) <- c('delta')
df$delta <- delta$delta
return(df)
}
test_df <- compute_delta(test_df, 'count')
test_df
get_location <- function(df_full, country, province) {
df <- shift_up(extract_location(df_full, country,province), "count")
df$sequence <- seq(1,nrow(df))
df$count <- as.numeric(df$count)
df <- remove_zeros(df)
# Compute delta column
df <- compute_delta(df, 'count')
return(df)
}
all_locations = data.frame(as.integer(), as.character(), as.integer(), as.integer())
names(all_locations) <- c("sequence", "location","count", "delta")
minnesota <- get_location(df_confirmed, "US", "Minnesota")
iran <- get_location(df_confirmed, "Iran","Iran")
italy <- get_location(df_confirmed, "Italy", "Italy")
france <- get_location(df_confirmed, "France","France")
spain <- get_location(df_confirmed, "Spain","Spain")
china <- get_location(df_confirmed, "China","Hubei")
taiwan <- get_location(df_confirmed, "Taiwan*", "Taiwan*")
skorea <- get_location(df_confirmed, "Korea, South","Korea, South")
all_locations <- rbind(all_locations, minnesota)
all_locations <- rbind(all_locations, iran)
all_locations <- rbind(all_locations, italy)
all_locations <- rbind(all_locations, france)
all_locations <- rbind(all_locations, spain)
all_locations <- rbind(all_locations, china)
all_locations <- rbind(all_locations, taiwan)
all_locations <- rbind(all_locations, skorea)
p <- ggplot(all_locations, aes(x=sequence, y=delta, colour=location, linetype=location)) +
geom_line() +
ggtitle("COVID19 New Cases")+xlab("Days After First Case")+ylab("New Cases")
p
p <- ggplot(all_locations, aes(x=sequence, y=sqrt(delta), colour=location, linetype=location)) +
geom_line()+ggtitle("COVID-19 New Cases (Sqrt)")+xlab("Days After First Case")+ylab("New Cases sqrt(x)")
p
all_locations$logscale <- log(all_locations$delta)
all_locations[all_locations<0] <-0
p <- ggplot(all_locations, aes(x=sequence, y=logscale, colour=location,  linetype=location)) +
geom_line() + ggtitle("COVID-19 New Cases Natural Log")+xlab("Days After First Case")+ylab("New Cases ln(x)")
p
write.csv(all_locations, "all_locations.csv", row.names = FALSE)
rm(list=ls())
library(ggplot2)
library(data.table)
library(RCurl)
df_confirmed <- read.csv('time_series_covid_19_confirmed.csv')
#covid_file <- getURL('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv', ssl.verifyhost=FALSE, ssl.verifypeer=FALSE)
#df_confirmed <- read.csv(textConnection(covid_file), header=T)
#head(df_confirmed)
#df_deaths <- read.csv('time_series_covid_19_deaths.csv')
#df_recovered <- read.csv('time_series_covid_19_recovered.csv')
fill_missing_province <- function(df) {
df[,1] <- as.character(df[,1])
df[,2] <- as.character(df[,2])
head(df_confirmed)
for(i in seq(1,nrow(df))){
if(as.character(df[i,1])==""){
df[i,1] <- df[i,2]
}
}
df[,1] <- as.factor(df[,1])
df[,2] <- as.factor(df[,2])
return(df)
}
df_confirmed <- fill_missing_province(df_confirmed)
head(df_confirmed)
# Rename rows...
extract_location <- function(df, cname, pname){
country <- subset(df, df$Country.Region==cname)
head(country)
dfct <- data.frame(t(subset(country, country$Province.State==pname)))
dfct <- tail(dfct, length(dfct)-5)
names(dfct) <- c("count")
dfct$count <- as.numeric(as.character(dfct$count))
dfct$location = rep(paste(cname,"-",pname), nrow(dfct))
dfct$sequence = seq(1,nrow(dfct))
names(dfct)<- c('count','location','sequence')
dfct <- dfct[c('sequence','location','count')]
dfct$count <- as.integer(dfct$count)
row.names(dfct) <- seq(1,nrow(dfct))
return(dfct)
}
head(extract_location(df_confirmed, "US", "Minnesota"))
rm(list=ls())
library(ggplot2)
library(data.table)
library(RCurl)
df_confirmed <- read.csv('time_series_covid_19_confirmed.csv')
fill_missing_province <- function(df) {
df[,1] <- as.character(df[,1])
df[,2] <- as.character(df[,2])
head(df_confirmed)
for(i in seq(1,nrow(df))){
if(as.character(df[i,1])==""){
df[i,1] <- df[i,2]
}
}
df[,1] <- as.factor(df[,1])
df[,2] <- as.factor(df[,2])
return(df)
}
df_confirmed <- fill_missing_province(df_confirmed)
head(df_confirmed)
# Rename rows...
extract_location <- function(df, cname, pname){
country <- subset(df, df$Country.Region==cname)
head(country)
dfct <- data.frame(t(subset(country, country$Province.State==pname)))
dfct <- tail(dfct, length(dfct)-5)
names(dfct) <- c("count")
dfct$count <- as.numeric(as.character(dfct$count))
dfct$location = rep(paste(cname,"-",pname), nrow(dfct))
dfct$sequence = seq(1,nrow(dfct))
names(dfct)<- c('count','location','sequence')
dfct <- dfct[c('sequence','location','count')]
dfct$count <- as.integer(dfct$count)
row.names(dfct) <- seq(1,nrow(dfct))
return(dfct)
}
head(extract_location(df_confirmed, "US", "Minnesota"))
head(extract_location(df_confirmed, "US", "US"))
rm(list=ls())
library(ggplot2)
library(data.table)
library(RCurl)
df_confirmed <- read.csv('time_series_covid_19_confirmed.csv')
fill_missing_province <- function(df) {
df[,1] <- as.character(df[,1])
df[,2] <- as.character(df[,2])
head(df_confirmed)
for(i in seq(1,nrow(df))){
if(as.character(df[i,1])==""){
df[i,1] <- df[i,2]
}
}
df[,1] <- as.factor(df[,1])
df[,2] <- as.factor(df[,2])
return(df)
}
df_confirmed <- fill_missing_province(df_confirmed)
head(df_confirmed)
# Rename rows...
extract_location <- function(df, cname, pname){
country <- subset(df, df$Country.Region==cname)
head(country)
dfct <- data.frame(t(subset(country, country$Province.State==pname)))
dfct <- tail(dfct, length(dfct)-5)
names(dfct) <- c("count")
dfct$count <- as.numeric(as.character(dfct$count))
dfct$location = rep(paste(cname,"-",pname), nrow(dfct))
dfct$sequence = seq(1,nrow(dfct))
names(dfct)<- c('count','location','sequence')
dfct <- dfct[c('sequence','location','count')]
dfct$count <- as.integer(dfct$count)
row.names(dfct) <- seq(1,nrow(dfct))
return(dfct)
}
head(extract_location(df_confirmed, "US", "US"))
shift_up <- function(df, column){
idx = which(names(df)==column)
while(df[1,idx]==0){
first_row <- df[1,]
for(i in seq(1, nrow(df)-1)){
df[i,] <- df[i+1,]
}
df[nrow(df),] <- first_row
}
return(df)
}
test_df <- data.frame(as.integer(), as.character())
test_df <- rbind(test_df,data.frame(count=0,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=0,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=1,stuff='one'))
test_df <- rbind(test_df,data.frame(count=2,stuff='two'))
test_df <- rbind(test_df,data.frame(count=3,stuff='three'))
names(test_df) <- c('count','stuff')
test_df
shift_up(test_df, 'count')
remove_zeros <- function(df) {
new_df = subset(df, df$count>0)
return(new_df)
}
test_df <- data.frame(as.integer(), as.character())
test_df <- rbind(test_df,data.frame(count=0,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=0,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=1,stuff='one'))
test_df <- rbind(test_df,data.frame(count=2,stuff='two'))
test_df <- rbind(test_df,data.frame(count=3,stuff='three'))
names(test_df) <- c('count','stuff')
test_df
shift_df <- shift_up(test_df, 'count')
shift_df
clean_df <- remove_zeros(shift_df)
clean_df
test_df <- data.frame(as.integer(), as.character())
test_df <- rbind(test_df,data.frame(count=5,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=45,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=112,stuff='one'))
test_df <- rbind(test_df,data.frame(count=209,stuff='two'))
test_df <- rbind(test_df,data.frame(count=783,stuff='three'))
names(test_df) <- c('count','stuff')
compute_delta <- function(df, colname){
delta = data.frame(as.integer())
delta <- rbind(delta,delta=0)
c = which(names(df)==colname)
for (r in seq(2,nrow(df))){
delta <- rbind(delta, delta=(df[r,c] - df[r-1,c]))
}
names(delta) <- c('delta')
df$delta <- delta$delta
return(df)
}
test_df <- compute_delta(test_df, 'count')
test_df
get_location <- function(df_full, country, province) {
df <- shift_up(extract_location(df_full, country,province), "count")
df$sequence <- seq(1,nrow(df))
df$count <- as.numeric(df$count)
df <- remove_zeros(df)
# Compute delta column
df <- compute_delta(df, 'count')
return(df)
}
all_locations = data.frame(as.integer(), as.character(), as.integer(), as.integer())
names(all_locations) <- c("sequence", "location","count", "delta")
minnesota <- get_location(df_confirmed, "US", "US")
iran <- get_location(df_confirmed, "Iran","Iran")
italy <- get_location(df_confirmed, "Italy", "Italy")
france <- get_location(df_confirmed, "France","France")
spain <- get_location(df_confirmed, "Spain","Spain")
china <- get_location(df_confirmed, "China","Hubei")
taiwan <- get_location(df_confirmed, "Taiwan*", "Taiwan*")
skorea <- get_location(df_confirmed, "Korea, South","Korea, South")
all_locations <- rbind(all_locations, minnesota)
all_locations <- rbind(all_locations, iran)
all_locations <- rbind(all_locations, italy)
all_locations <- rbind(all_locations, france)
all_locations <- rbind(all_locations, spain)
all_locations <- rbind(all_locations, china)
all_locations <- rbind(all_locations, taiwan)
all_locations <- rbind(all_locations, skorea)
p <- ggplot(all_locations, aes(x=sequence, y=delta, colour=location, linetype=location)) +
geom_line() +
ggtitle("COVID19 New Cases")+xlab("Days After First Case")+ylab("New Cases")
p
p <- ggplot(all_locations, aes(x=sequence, y=sqrt(delta), colour=location, linetype=location)) +
geom_line()+ggtitle("COVID-19 New Cases (Sqrt)")+xlab("Days After First Case")+ylab("New Cases sqrt(x)")
p
all_locations$logscale <- log(all_locations$delta)
all_locations[all_locations<0] <-0
p <- ggplot(all_locations, aes(x=sequence, y=logscale, colour=location,  linetype=location)) +
geom_line() + ggtitle("COVID-19 New Cases Natural Log")+xlab("Days After First Case")+ylab("New Cases ln(x)")
p
write.csv(all_locations, "all_locations.csv", row.names = FALSE)
rm(list=ls())
library(ggplot2)
library(data.table)
library(RCurl)
df_confirmed <- read.csv('time_series_covid_19_confirmed.csv')
fill_missing_province <- function(df) {
df[,1] <- as.character(df[,1])
df[,2] <- as.character(df[,2])
head(df_confirmed)
for(i in seq(1,nrow(df))){
if(as.character(df[i,1])==""){
df[i,1] <- df[i,2]
}
}
df[,1] <- as.factor(df[,1])
df[,2] <- as.factor(df[,2])
return(df)
}
df_confirmed <- fill_missing_province(df_confirmed)
head(df_confirmed)
# Rename rows...
extract_location <- function(df, cname, pname){
country <- subset(df, df$Country.Region==cname)
head(country)
dfct <- data.frame(t(subset(country, country$Province.State==pname)))
dfct <- tail(dfct, length(dfct)-5)
names(dfct) <- c("count")
dfct$count <- as.numeric(as.character(dfct$count))
dfct$location = rep(paste(cname,"-",pname), nrow(dfct))
dfct$sequence = seq(1,nrow(dfct))
names(dfct)<- c('count','location','sequence')
dfct <- dfct[c('sequence','location','count')]
dfct$count <- as.integer(dfct$count)
row.names(dfct) <- seq(1,nrow(dfct))
return(dfct)
}
head(extract_location(df_confirmed, "US", "US"))
shift_up <- function(df, column){
idx = which(names(df)==column)
while(df[1,idx]==0){
first_row <- df[1,]
for(i in seq(1, nrow(df)-1)){
df[i,] <- df[i+1,]
}
df[nrow(df),] <- first_row
}
return(df)
}
test_df <- data.frame(as.integer(), as.character())
test_df <- rbind(test_df,data.frame(count=0,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=0,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=1,stuff='one'))
test_df <- rbind(test_df,data.frame(count=2,stuff='two'))
test_df <- rbind(test_df,data.frame(count=3,stuff='three'))
names(test_df) <- c('count','stuff')
test_df
shift_up(test_df, 'count')
remove_zeros <- function(df) {
new_df = subset(df, df$count>0)
return(new_df)
}
test_df <- data.frame(as.integer(), as.character())
test_df <- rbind(test_df,data.frame(count=0,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=0,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=1,stuff='one'))
test_df <- rbind(test_df,data.frame(count=2,stuff='two'))
test_df <- rbind(test_df,data.frame(count=3,stuff='three'))
names(test_df) <- c('count','stuff')
test_df
shift_df <- shift_up(test_df, 'count')
shift_df
clean_df <- remove_zeros(shift_df)
clean_df
test_df <- data.frame(as.integer(), as.character())
test_df <- rbind(test_df,data.frame(count=5,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=45,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=112,stuff='one'))
test_df <- rbind(test_df,data.frame(count=209,stuff='two'))
test_df <- rbind(test_df,data.frame(count=783,stuff='three'))
names(test_df) <- c('count','stuff')
compute_delta <- function(df, colname){
delta = data.frame(as.integer())
delta <- rbind(delta,delta=0)
c = which(names(df)==colname)
for (r in seq(2,nrow(df))){
delta <- rbind(delta, delta=(df[r,c] - df[r-1,c]))
}
names(delta) <- c('delta')
df$delta <- delta$delta
return(df)
}
test_df <- compute_delta(test_df, 'count')
test_df
get_location <- function(df_full, country, province) {
df <- shift_up(extract_location(df_full, country,province), "count")
df$sequence <- seq(1,nrow(df))
df$count <- as.numeric(df$count)
df <- remove_zeros(df)
# Compute delta column
df <- compute_delta(df, 'count')
return(df)
}
all_locations = data.frame(as.integer(), as.character(), as.integer(), as.integer())
names(all_locations) <- c("sequence", "location","count", "delta")
minnesota <- get_location(df_confirmed, "US", "US")
iran <- get_location(df_confirmed, "Iran","Iran")
italy <- get_location(df_confirmed, "Italy", "Italy")
france <- get_location(df_confirmed, "France","France")
spain <- get_location(df_confirmed, "Spain","Spain")
china <- get_location(df_confirmed, "China","Hubei")
taiwan <- get_location(df_confirmed, "Taiwan*", "Taiwan*")
skorea <- get_location(df_confirmed, "Korea, South","Korea, South")
all_locations <- rbind(all_locations, minnesota)
all_locations <- rbind(all_locations, iran)
all_locations <- rbind(all_locations, italy)
all_locations <- rbind(all_locations, france)
all_locations <- rbind(all_locations, spain)
all_locations <- rbind(all_locations, china)
all_locations <- rbind(all_locations, taiwan)
all_locations <- rbind(all_locations, skorea)
p <- ggplot(all_locations, aes(x=sequence, y=delta, colour=location, linetype=location)) +
geom_line() +
ggtitle("COVID19 New Cases")+xlab("Days After First Case")+ylab("New Cases")
p
p <- ggplot(all_locations, aes(x=sequence, y=sqrt(delta), colour=location, linetype=location)) +
geom_line()+ggtitle("COVID-19 New Cases (Sqrt)")+xlab("Days After First Case")+ylab("New Cases sqrt(x)")
p
all_locations$logscale <- log(all_locations$delta)
all_locations[all_locations<0] <-0
p <- ggplot(all_locations, aes(x=sequence, y=logscale, colour=location,  linetype=location)) +
geom_line() + ggtitle("COVID-19 New Cases Natural Log")+xlab("Days After First Case")+ylab("New Cases ln(x)")
p
write.csv(all_locations, "all_locations.csv", row.names = FALSE)
tail(all_locations)
names(df_confirmed)
