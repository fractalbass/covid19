test_df <- rbind(test_df,data.frame(count=0,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=1,stuff='one'))
test_df <- rbind(test_df,data.frame(count=2,stuff='two'))
test_df <- rbind(test_df,data.frame(count=3,stuff='three'))
names(test_df) <- c('count','stuff')
test_df
shift_up(test_df, 'count')
remove_zeros <- function(df) {
new_df = subset(df, df$count>0)
return(new_df)
}
test_df <- data.frame(as.integer(), as.character())
test_df <- rbind(test_df,data.frame(count=0,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=0,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=1,stuff='one'))
test_df <- rbind(test_df,data.frame(count=2,stuff='two'))
test_df <- rbind(test_df,data.frame(count=3,stuff='three'))
names(test_df) <- c('count','stuff')
test_df
shift_df <- shift_up(test_df, 'count')
shift_df
clean_df <- remove_zeros(shift_df)
clean_df
test_df <- data.frame(as.integer(), as.character())
test_df <- rbind(test_df,data.frame(count=5,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=45,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=112,stuff='one'))
test_df <- rbind(test_df,data.frame(count=209,stuff='two'))
test_df <- rbind(test_df,data.frame(count=783,stuff='three'))
names(test_df) <- c('count','stuff')
compute_delta <- function(df, colname){
delta = data.frame(as.integer())
delta <- rbind(delta,delta=0)
c = which(names(df)==colname)
for (r in seq(2,nrow(df))){
delta <- rbind(delta, delta=(df[r,c] - df[r-1,c]))
}
names(delta) <- c('delta')
df$delta <- delta$delta
return(df)
}
test_df <- compute_delta(test_df, 'count')
test_df
get_location <- function(df_full, country, province) {
df <- shift_up(extract_location(df_full, country,province), "count")
df$sequence <- seq(1,nrow(df))
df$count <- as.numeric(df$count)
df <- remove_zeros(df)
# Compute delta column
df <- compute_delta(df, 'count')
return(df)
}
all_locations = data.frame(as.integer(), as.character(), as.integer(), as.integer())
names(all_locations) <- c("sequence", "location","count", "delta")
minnesota <- get_location(df_confirmed, "US", "Minnesota")
iran <- get_location(df_confirmed, "Iran","Iran")
italy <- get_location(df_confirmed, "Italy", "Italy")
france <- get_location(df_confirmed, "France","France")
spain <- get_location(df_confirmed, "Spain","Spain")
china <- get_location(df_confirmed, "China","Hubei")
taiwan <- get_location(df_confirmed, "Taiwan*", "Taiwan*")
skorea <- get_location(df_confirmed, "Korea, South","Korea, South")
all_locations <- rbind(all_locations, minnesota)
all_locations <- rbind(all_locations, iran)
all_locations <- rbind(all_locations, italy)
all_locations <- rbind(all_locations, france)
all_locations <- rbind(all_locations, spain)
all_locations <- rbind(all_locations, china)
all_locations <- rbind(all_locations, taiwan)
all_locations <- rbind(all_locations, skorea)
p <- ggplot(all_locations, aes(x=sequence, y=delta, colour=location, linetype=location)) +
geom_line() +
ggtitle("COVID19 New Cases")+xlab("Days After First Case")+ylab("New Cases")
p
p <- ggplot(all_locations, aes(x=sequence, y=sqrt(delta), colour=location, linetype=location)) +
geom_line()+ggtitle("COVID-19 New Cases (Sqrt)")+xlab("Days After First Case")+ylab("New Cases sqrt(x)")
p
all_locations$logscale <- log(all_locations$delta)
all_locations[all_locations<0] <-0
p <- ggplot(all_locations, aes(x=sequence, y=logscale, colour=location,  linetype=location)) +
geom_line() + ggtitle("COVID-19 New Cases Natural Log")+xlab("Days After First Case")+ylab("New Cases ln(x)")
p
write.csv(all_locations, "all_locations.csv", index=FALSE)
write.csv(all_locations, "all_locations.csv", row.names = FALSE)
all_locations <- read.csv("all_locations.csv", header=T)
head(all_locations)
rm(list=ls())
all_locations <- read.csv("all_locations.csv", header=T)
head(all_locations)
library(ggplot2)
p <- ggplot(all_locations, aes(x=sequence, y=logscale, colour=location,  linetype=location)) +
geom_line() + ggtitle("COVID-19 New Cases Natural Log")+xlab("Days After First Case")+ylab("New Cases ln(x)")
p
china_df <- subset(all_locations, all_locations$location=="China - Hubei")
p <- ggplot(china_df, aes(x=sequence, y=logscale, colour=location,  linetype=location)) +
geom_line() + ggtitle("COVID-19 New Cases Natural Log")+xlab("Days After First Case")+ylab("New Cases ln(x)")
p
subset(china_df, china_df$delta==0)
china_df[7:9,]
4903-3554
3554+1349
3554+1349/2
china_df[8,3] <- 4229
china_df[21:24,]
china_df[31:23,]
china_df[31:34,]
china_df[21:24,]
china_df[31:34,]
china_df[8,3] <- 4229
china_df[22,3] <- int(33366+((48206-33366)/2))
china_df[8,3] <- 4229
china_df[22,3] <- as.integer(33366+((48206-33366)/2))
china_df[33,3] <- as.integer(64084+((64287-64084)/2))
p <- ggplot(china_df, aes(x=sequence, y=logscale, colour=location,  linetype=location)) +
geom_line() + ggtitle("COVID-19 New Cases Natural Log")+xlab("Days After First Case")+ylab("New Cases ln(x)")
p
china_df[8,]
china_df[6:9,]
china_df[8,3] <- 4229
china_df[22,3] <- as.integer(33366+((48206-33366)/2))
china_df[33,3] <- as.intege(64084+((64287-64084)/2))
china_df[8,3] <- 4229
china_df[22,3] <- as.integer(33366+((48206-33366)/2))
china_df[33,3] <- as.integer(64084+((64287-64084)/2))
china_df$logscale <- log(china_df$delta)
p <- ggplot(china_df, aes(x=sequence, y=logscale, colour=location,  linetype=location)) +
geom_line() + ggtitle("COVID-19 New Cases Natural Log")+xlab("Days After First Case")+ylab("New Cases ln(x)")
p
china_df[6:9,]
compute_delta <- function(df, colname){
delta = data.frame(as.integer())
delta <- rbind(delta,delta=0)
c = which(names(df)==colname)
for (r in seq(2,nrow(df))){
delta <- rbind(delta, delta=(df[r,c] - df[r-1,c]))
}
names(delta) <- c('delta')
df$delta <- delta$delta
return(df)
}
china_df[8,3] <- 4229
china_df[22,3] <- as.integer(33366+((48206-33366)/2))
china_df[33,3] <- as.integer(64084+((64287-64084)/2))
china_df <- compute_delta(china_df)
compute_delta <- function(df, colname){
delta = data.frame(as.integer())
delta <- rbind(delta,delta=0)
c = which(names(df)==colname)
for (r in seq(2,nrow(df))){
delta <- rbind(delta, delta=(df[r,c] - df[r-1,c]))
}
names(delta) <- c('delta')
df$delta <- delta$delta
return(df)
}
china_df[8,3] <- 4229
china_df[22,3] <- as.integer(33366+((48206-33366)/2))
china_df[33,3] <- as.integer(64084+((64287-64084)/2))
china_df <- compute_delta(china_df, 'count')
china_df$logscale <- log(china_df$delta)
p <- ggplot(china_df, aes(x=sequence, y=logscale, colour=location,  linetype=location)) +
geom_line() + ggtitle("COVID-19 New Cases Natural Log")+xlab("Days After First Case")+ylab("New Cases ln(x)")
p
library("MASS", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
detach("package:MASS", unload=TRUE)
library("MASS", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
library(fitdistrplus)
library(MASS)
fit.gamma <- fitdist(china_df$logscale, "gamma")
library(MASS)
fit.gamma <- fitdistr(china_df$logscale, "gamma")
china_df$logscale
compute_delta <- function(df, colname){
delta = data.frame(as.integer())
delta <- rbind(delta,delta=0)
c = which(names(df)==colname)
for (r in seq(2,nrow(df))){
delta <- rbind(delta, delta=(df[r,c] - df[r-1,c]))
}
names(delta) <- c('delta')
df$delta <- delta$delta
return(df)
}
china_df[8,3] <- 4229
china_df[22,3] <- as.integer(33366+((48206-33366)/2))
china_df[33,3] <- as.integer(64084+((64287-64084)/2))
china_df <- compute_delta(china_df, 'count')
china_df$logscale <- log(china_df$delta)
china_df[chind_df<0] <-0
compute_delta <- function(df, colname){
delta = data.frame(as.integer())
delta <- rbind(delta,delta=0)
c = which(names(df)==colname)
for (r in seq(2,nrow(df))){
delta <- rbind(delta, delta=(df[r,c] - df[r-1,c]))
}
names(delta) <- c('delta')
df$delta <- delta$delta
return(df)
}
china_df[8,3] <- 4229
china_df[22,3] <- as.integer(33366+((48206-33366)/2))
china_df[33,3] <- as.integer(64084+((64287-64084)/2))
china_df <- compute_delta(china_df, 'count')
china_df$logscale <- log(china_df$delta)
china_df[china_df<0] <-0
p <- ggplot(china_df, aes(x=sequence, y=logscale, colour=location,  linetype=location)) +
geom_line() + ggtitle("COVID-19 New Cases Natural Log")+xlab("Days After First Case")+ylab("New Cases ln(x)")
p
library(MASS)
fit.gamma <- fitdistr(china_df$logscale, "gamma")
library(MASS)
fit.gamma <- fitdistr(china_df$logscale, "weibull")
library(MASS)
fit.gamma <- fitdistr(china_df$logscale, "gamma")
china_df$logscale
library(MASS)
fit.gamma <- fitdistr(china_df$count, "gamma")
library(MASS)
df_china_pop <- df_china[-c(1)]
library(MASS)
china_df_pop <- china_df[-c(1)]
fit.gamma <- fitdistr(china_df_pop$count, "gamma")
china_df_pop
library(MASS)
china_df_pop <- china_df[-c(199)]
fit.gamma <- fitdistr(china_df_pop$count, "gamma")
china_df_pop <- china_df[-c(199)]
china_df_pop
library(MASS)
china_df_pop <- subset(china_df, china_df$count>0]
library(MASS)
china_df_pop <- subset(china_df, china_df$count>0)
fit.gamma <- fitdistr(china_df_pop$count, "gamma")
library(MASS)
china_df_pop <- subset(china_df, china_df$delta>0)
fit.gamma <- fitdistr(china_df_pop$count, "gamma")
library(MASS)
china_df_pop <- subset(china_df, china_df$delta>0)
fit.gamma <- fitdistr(china_df_pop$count, "gamma",list(shape = 1, rate = 0.1), lower = 0.01)
summary(fit.gamma)
library(MASS)
china_df_pop <- subset(china_df, china_df$delta>0)
fit.gamma <- fitdistr(china_df_pop$count, "gamma",list(shape = 1, rate = 0.1), lower = 0.01)
summary(fit.gamma)
hist(china_df$count, pch=20, breaks=25, prob=TRUE, main="")
curve(dnorm(x, fit$estimate[1], fit$estimate[2]), col="red", lwd=2, add=T)
library(MASS)
china_df_pop <- subset(china_df, china_df$delta>0)
fit.gamma <- fitdistr(china_df_pop$count, "gamma",list(shape = 1, rate = 0.1), lower = 0.01)
summary(fit.gamma)
hist(china_df$count, pch=20, breaks=25, prob=TRUE, main="")
curve(dnorm(x, fit.gamma$estimate[1], fit.gamma$estimate[2]), col="red", lwd=2, add=T)
library(MASS)
china_df_pop <- subset(china_df, china_df$delta>0)
fit.gamma <- fitdistr(china_df_pop$count, "weibull",list(shape = 1, rate = 0.1), lower = 0.01)
library(MASS)
china_df_pop <- subset(china_df, china_df$delta>0)
fit.gamma <- fitdistr(china_df_pop$count, "weibull"), lower = 0.01)
library(MASS)
china_df_pop <- subset(china_df, china_df$delta>0)
fit.gamma <- fitdistr(china_df_pop$count, "weibull")
summary(fit.gamma)
library(MASS)
china_df_pop <- subset(china_df, china_df$delta>0)
fit.gamma <- fitdistr(china_df_pop$count, "weibull")
summary(fit.gamma)
plot(fit.gamma)
detach("package:MASS", unload=TRUE)
install.packages("EnvStats")
library(EvnStats)
library(EnvStats)
ew <- eweibull(china_df_pop$count, method="mle")
summary(ew)
library(EnvStats)
ew <- eweibull(china_df_pop$count, method="mle")
summary(ew)
ew
library(EnvStats)
ew <- eweibull(china_df_pop$count, method="mle")
summary(ew)
ew
plot(ew)
predict(ew, 4)
predict(ew, .2)
library(EnvStats)
ew <- eweibull(china_df_pop$delta, method="mle")
summary(ew)
ew
predict(ew, .2)
library(EnvStats)
ew <- eweibull(china_df_pop$logscale, method="mle")
summary(ew)
ew
predict(ew, .2)
ew
library(EnvStats)
ew <- eweibull(china_df_pop$logscale, method="mle")
summary(ew)
dat <- rweibull(20, shape = ew$parameters[1], scale = ew$parameters[2])
plot(dat)
library(EnvStats)
ew <- eweibull(china_df_pop$logscale, method="mle")
summary(ew)
dat <- rweibull(5000, shape = ew$parameters[1], scale = ew$parameters[2])
plot(dat)
reg = glm(logscale~sequence, data=china_df, family="quasipoisson")
plot(reg)
reg = glm(logscale~sequence, data=china_df, family="quasipoisson")
plot(reg)
for (x in seq(0,60, by=.25)){
y <- predict(glm, x)
plot(x,y)
}
reg = glm(logscale~sequence, data=china_df, family="quasipoisson")
plot(reg)
for (x in seq(0,60, by=.25)){
y <- predict(reg, x)
print(x,y)
}
reg = glm(logscale~sequence, data=china_df, family="quasipoisson")
plot(reg)
dat = data.frame(as.double())
names(dat)<-c('sequence')
dat$seq <- predict(reg, dat)
dat
reg = glm(logscale~sequence, data=china_df, family="quasipoisson")
plot(reg)
dat = data.frame(as.double())
names(dat)<-c('sequence')
dat$sequence <- predict(reg, dat)
dat
dat
predict(reg, dat)
predict(reg, new_data=dat)
reg = glm(logscale~sequence, data=china_df, family="quasipoisson")
plot(reg)
dat = data.frame(as.double())
names(dat)<-c('sequence')
newdays <- seq(1,nrow(china_df))
dat$sequence<-predict(reg, new_data=newdays)
rm(list=ls())
all_locations <- read.csv("all_locations.csv", header=T)
head(all_locations)
library(ggplot2)
p <- ggplot(all_locations, aes(x=sequence, y=logscale, colour=location,  linetype=location)) +
geom_line() + ggtitle("COVID-19 New Cases Natural Log")+xlab("Days After First Case")+ylab("New Cases ln(x)")
p
china_df <- subset(all_locations, all_locations$location=="China - Hubei")
p <- ggplot(china_df, aes(x=sequence, y=logscale, colour=location,  linetype=location)) +
geom_line() + ggtitle("COVID-19 New Cases Natural Log")+xlab("Days After First Case")+ylab("New Cases ln(x)")
p
subset(china_df, china_df$delta==0)
compute_delta <- function(df, colname){
delta = data.frame(as.integer())
delta <- rbind(delta,delta=0)
c = which(names(df)==colname)
for (r in seq(2,nrow(df))){
delta <- rbind(delta, delta=(df[r,c] - df[r-1,c]))
}
names(delta) <- c('delta')
df$delta <- delta$delta
return(df)
}
china_df[8,3] <- 4229
china_df[22,3] <- as.integer(33366+((48206-33366)/2))
china_df[33,3] <- as.integer(64084+((64287-64084)/2))
china_df <- compute_delta(china_df, 'count')
china_df$logscale <- log(china_df$delta)
china_df[china_df<0] <-0
p <- ggplot(china_df, aes(x=sequence, y=logscale, colour=location,  linetype=location)) +
geom_line() + ggtitle("COVID-19 New Cases Natural Log")+xlab("Days After First Case")+ylab("New Cases ln(x)")
p
reg = glm(logscale~sequence, data=china_df, family="quasipoisson")
plot(reg)
dat = data.frame(as.double())
names(dat)<-c('sequence')
newdays <- seq(1,nrow(china_df))
dat$sequence<-predict(reg, new_data=newdays)
rm(list=ls())
library(ggplot2)
df_confirmed <- read.csv('time_series_covid_19_confirmed.csv')
df_deaths <- read.csv('time_series_covid_19_deaths.csv')
df_recovered <- read.csv('time_series_covid_19_recovered.csv')
fill_missing_province <- function(df) {
df[,1] <- as.character(df[,1])
df[,2] <- as.character(df[,2])
head(df_confirmed)
for(i in seq(1,nrow(df))){
if(as.character(df[i,1])==""){
df[i,1] <- df[i,2]
}
}
df[,1] <- as.factor(df[,1])
df[,2] <- as.factor(df[,2])
return(df)
}
df_confirmed <- fill_missing_province(df_confirmed)
head(df_confirmed)
# Rename rows...
extract_location <- function(df, cname, pname){
country <- subset(df, df$Country.Region==cname)
head(country)
dfct <- data.frame(t(subset(country, country$Province.State==pname)))
dfct <- tail(dfct, length(dfct)-5)
names(dfct) <- c("count")
dfct$count <- as.numeric(as.character(dfct$count))
dfct$location = rep(paste(cname,"-",pname), nrow(dfct))
dfct$sequence = seq(1,nrow(dfct))
names(dfct)<- c('count','location','sequence')
dfct <- dfct[c('sequence','location','count')]
dfct$count <- as.integer(dfct$count)
row.names(dfct) <- seq(1,nrow(dfct))
return(dfct)
}
head(extract_location(df_confirmed, "US", "Minnesota"))
shift_up <- function(df, column){
idx = which(names(df)==column)
while(df[1,idx]==0){
first_row <- df[1,]
for(i in seq(1, nrow(df)-1)){
df[i,] <- df[i+1,]
}
df[nrow(df),] <- first_row
}
return(df)
}
test_df <- data.frame(as.integer(), as.character())
test_df <- rbind(test_df,data.frame(count=0,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=0,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=1,stuff='one'))
test_df <- rbind(test_df,data.frame(count=2,stuff='two'))
test_df <- rbind(test_df,data.frame(count=3,stuff='three'))
names(test_df) <- c('count','stuff')
test_df
shift_up(test_df, 'count')
remove_zeros <- function(df) {
new_df = subset(df, df$count>0)
return(new_df)
}
test_df <- data.frame(as.integer(), as.character())
test_df <- rbind(test_df,data.frame(count=0,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=0,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=1,stuff='one'))
test_df <- rbind(test_df,data.frame(count=2,stuff='two'))
test_df <- rbind(test_df,data.frame(count=3,stuff='three'))
names(test_df) <- c('count','stuff')
test_df
shift_df <- shift_up(test_df, 'count')
shift_df
clean_df <- remove_zeros(shift_df)
clean_df
test_df <- data.frame(as.integer(), as.character())
test_df <- rbind(test_df,data.frame(count=5,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=45,stuff='zero'))
test_df <- rbind(test_df,data.frame(count=112,stuff='one'))
test_df <- rbind(test_df,data.frame(count=209,stuff='two'))
test_df <- rbind(test_df,data.frame(count=783,stuff='three'))
names(test_df) <- c('count','stuff')
compute_delta <- function(df, colname){
delta = data.frame(as.integer())
delta <- rbind(delta,delta=0)
c = which(names(df)==colname)
for (r in seq(2,nrow(df))){
delta <- rbind(delta, delta=(df[r,c] - df[r-1,c]))
}
names(delta) <- c('delta')
df$delta <- delta$delta
return(df)
}
test_df <- compute_delta(test_df, 'count')
test_df
get_location <- function(df_full, country, province) {
df <- shift_up(extract_location(df_full, country,province), "count")
df$sequence <- seq(1,nrow(df))
df$count <- as.numeric(df$count)
df <- remove_zeros(df)
# Compute delta column
df <- compute_delta(df, 'count')
return(df)
}
all_locations = data.frame(as.integer(), as.character(), as.integer(), as.integer())
names(all_locations) <- c("sequence", "location","count", "delta")
minnesota <- get_location(df_confirmed, "US", "Minnesota")
iran <- get_location(df_confirmed, "Iran","Iran")
italy <- get_location(df_confirmed, "Italy", "Italy")
france <- get_location(df_confirmed, "France","France")
spain <- get_location(df_confirmed, "Spain","Spain")
china <- get_location(df_confirmed, "China","Hubei")
taiwan <- get_location(df_confirmed, "Taiwan*", "Taiwan*")
skorea <- get_location(df_confirmed, "Korea, South","Korea, South")
all_locations <- rbind(all_locations, minnesota)
all_locations <- rbind(all_locations, iran)
all_locations <- rbind(all_locations, italy)
all_locations <- rbind(all_locations, france)
all_locations <- rbind(all_locations, spain)
all_locations <- rbind(all_locations, china)
all_locations <- rbind(all_locations, taiwan)
all_locations <- rbind(all_locations, skorea)
p <- ggplot(all_locations, aes(x=sequence, y=delta, colour=location, linetype=location)) +
geom_line() +
ggtitle("COVID19 New Cases")+xlab("Days After First Case")+ylab("New Cases")
p
p <- ggplot(all_locations, aes(x=sequence, y=sqrt(delta), colour=location, linetype=location)) +
geom_line()+ggtitle("COVID-19 New Cases (Sqrt)")+xlab("Days After First Case")+ylab("New Cases sqrt(x)")
p
all_locations$logscale <- log(all_locations$delta)
all_locations[all_locations<0] <-0
p <- ggplot(all_locations, aes(x=sequence, y=logscale, colour=location,  linetype=location)) +
geom_line() + ggtitle("COVID-19 New Cases Natural Log")+xlab("Days After First Case")+ylab("New Cases ln(x)")
p
write.csv(all_locations, "all_locations.csv", row.names = FALSE)
